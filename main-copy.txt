package main

import (
	"github.com/gin-gonic/gin"
	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/mysql"
)

// Model
type Article struct {
	gorm.Model
	Title string
	Slug  string `gorm:"unique_index"`
	Desc  string `sql:"type:text;"`
}

func main() {

	// Setting Database MYSQL
	db, err := gorm.Open("mysql", "root:@/learn_gin?charset=utf8&parseTime=True&loc=Local")

	if err != nil {
		panic("failed to connect database")

	}

	defer db.Close()

	// Migrate the Database
	db.AutoMigrate(&Article{})

	//  Setting Default Router
	router := gin.Default()

	// Verison Grouping
	apiV1 := router.Group("/api/v1/")
	{
		// Module Grouping
		articles := apiV1.Group("/article")
		{
			// Route initialization
			articles.GET("/", getHome)
			articles.GET("/:title", getArticle)
			articles.POST("/", postArticle)
		}
		// Old Route initialization
		// apiV1.GET("/", getHome)
		// apiV1.GET("/article/:title", getArticle)
		// apiV1.POST("/articles", postArticle)
	}

	router.Run()
}

func getHome(c *gin.Context) {

	// Return JSON
	c.JSON(200, gin.H{
		"status":  "berhasil",
		"message": "Berhasil Akses Home",
	})
}

func getArticle(c *gin.Context) {

	// Get Parameter
	title := c.Param("title")

	c.JSON(200, gin.H{
		"status":  "berhasil",
		"message": title,
	})
}

func postArticle(c *gin.Context) {
	// Get Form
	title := c.PostForm("title")
	desc := c.PostForm("desc")

	c.JSON(200, gin.H{
		"status": "berhasil",
		"title":  title,
		"desc":   desc,
	})
}
